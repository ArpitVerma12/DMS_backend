{"version":3,"sources":["../../src/table/table.js"],"names":["pool","require","createTables","connect","client","query","console","log","error","module","exports"],"mappings":";;;;AAAA,IAAMA,OAAOC,QAAQ,gBAAR,CAAb;;AAEA,IAAMC;AAAA,qEAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACAF,KAAKG,OAAL,EADA;;AAAA;AACfC,kBADe;AAAA;AAAA;AAAA,mBAIXA,OAAOC,KAAP,8XAJW;;AAAA;;AAoBjBC,oBAAQC,GAAR,CAAY,6BAAZ;AApBiB;AAAA;;AAAA;AAAA;AAAA;;AAsBjBD,oBAAQE,KAAR;AACF;AACA;AACA;AACA;;AA1BmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA,GAAN;;AA8BAC,OAAOC,OAAP,GAAiB,EAAER,0BAAF,EAAjB","file":"table.js","sourcesContent":["const pool = require('../config/pool');\r\n\r\nconst createTables = async () => {\r\n  let client = await pool.connect();\r\n\r\n  try {\r\n    await client.query(`\r\n      CREATE TABLE IF NOT EXISTS demo\r\n      (\r\n        id SERIAL PRIMARY KEY,\r\n        name varchar(255),\r\n        d_id varchar(255) NOT NULL UNIQUE,\r\n        Category varchar(255),\r\n        Number INTEGER,\r\n        playList boolean,\r\n        url varchar(255),\r\n        size varchar(255),\r\n        Type varchar(255),\r\n        created_at TIMESTAMP DEFAULT NOW()\r\n      )\r\n    `);\r\n\r\n    console.log('Tables created successfully');\r\n  } catch (err) {\r\n    console.error(err);\r\n  // } finally {\r\n  //   if (client) {\r\n  //     await client.release();\r\n  //   }\r\n  }\r\n};\r\n\r\nmodule.exports = { createTables };\r\n"]}