{"version":3,"sources":["../../src/Generator/NumericId.js"],"names":["crypto","require","generateNumericValue","length","parseInt","randomBytes","Math","ceil","toString","slice","padStart","module","exports"],"mappings":";;AAAA,IAAMA,SAASC,QAAQ,QAAR,CAAf;;AAGA,IAAMC,uBAAuB,SAAvBA,oBAAuB,CAACC,MAAD,EAAY;AACvC,SAAOC,SAASJ,OACbK,WADa,CACDC,KAAKC,IAAL,CAAUJ,SAAS,CAAnB,CADC,EAEbK,QAFa,CAEJ,KAFI,EAGbC,KAHa,CAGP,CAHO,EAGJN,MAHI,CAAT,EAGc,EAHd,EAIJK,QAJI,GAIOE,QAJP,CAIgBP,MAJhB,EAIwB,GAJxB,CAAP;AAKD,CAND;;AAQAQ,OAAOC,OAAP,GAAeV,oBAAf","file":"NumericId.js","sourcesContent":["const crypto = require('crypto')\r\n\r\n\r\nconst generateNumericValue = (length) => {\r\n  return parseInt(crypto\r\n    .randomBytes(Math.ceil(length / 2))\r\n    .toString('hex')\r\n    .slice(0, length), 16)\r\n    .toString().padStart(length, '0');\r\n};\r\n\r\nmodule.exports=generateNumericValue"]}